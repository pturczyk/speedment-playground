package io.pturczyk.speed.generated.generated;

import com.speedment.common.annotation.GeneratedCode;
import com.speedment.common.injector.Injector;
import com.speedment.runtime.application.AbstractApplicationBuilder;
import io.pturczyk.speed.generated.SpeedApplication;
import io.pturczyk.speed.generated.SpeedApplicationBuilder;
import io.pturczyk.speed.generated.SpeedApplicationImpl;
import io.pturczyk.speed.generated.postgres.public_.authors.AuthorsManagerImpl;
import io.pturczyk.speed.generated.postgres.public_.authors.AuthorsSqlAdapter;
import io.pturczyk.speed.generated.postgres.public_.books.BooksManagerImpl;
import io.pturczyk.speed.generated.postgres.public_.books.BooksSqlAdapter;

/**
 * A generated base {@link
 * com.speedment.runtime.application.AbstractApplicationBuilder} class for the
 * {@link com.speedment.runtime.config.Project} named public.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedSpeedApplicationBuilder extends AbstractApplicationBuilder<SpeedApplication, SpeedApplicationBuilder> {
    
    protected GeneratedSpeedApplicationBuilder() {
        super(SpeedApplicationImpl.class, GeneratedSpeedMetadata.class);
        withManager(AuthorsManagerImpl.class);
        withManager(BooksManagerImpl.class);
        withComponent(AuthorsSqlAdapter.class);
        withComponent(BooksSqlAdapter.class);
    }
    
    @Override
    public SpeedApplication build(Injector injector) {
        return injector.getOrThrow(SpeedApplication.class);
    }
}